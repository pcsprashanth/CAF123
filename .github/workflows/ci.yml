name: 'Azure Foundation CI Workflow'

on:
  push:
    branches: [ "main" ]
  pull_request:
    paths:
        - "infra**"

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write


jobs:
  build-and-deploy:
      env:
       TF_IN_AUTOMATION: true
       TF_INPUT: false
       TF_WORKING_DIR: infra/
       ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
       ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
       ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      runs-on: ubuntu-latest

#Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
        - name: Terraform Init
          run: terraform init
          working-directory: ${{ env.TF_WORKING_DIR }}

    # # Checks that all Terraform configuration files adhere to a canonical format
        - name: Terraform Format
          run: terraform fmt -check
    
    # # Checks that all Terraform configuration files adhere to a canonical format
    
        - name: Terraform Validate
          run: terraform validate -no-color

    # # Generates an execution plan for Terraform
        - name: Terraform Plan
          run: terraform plan
          continue-on-error: true
          working-directory: ${{ env.TF_WORKING_DIR }}


        - name: Terraform Plan Status
          if: steps.plan.outcome == 'failure'
          run: exit 1
    
        - name: Terraform Apply
          if: ${{ success() }}
          run: terraform apply -auto-approve
          working-directory: ${{ env.TF_WORKING_DIR }}
